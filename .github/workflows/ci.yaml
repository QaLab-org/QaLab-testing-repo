name: Deploy Development environment

on:
  push:
    branches:
      - "main"
  workflow_dispatch:
    

jobs:

  build:
    name: 📦 Build project
    runs-on: ubuntu-latest
    steps:
      - name: Build-app
        run: echo "🔧 Build is success..."
  lint:
    name: 🕵️ Lint
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Check lint issues
        run: echo "No Lint issues found"  
  
  unit-test:
    name: 🕵️ Unit tests
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: check working directory
        run : |
           pwd
           ls
           cd unit-tests

      - name: Run unit tests
        run: |
           cd unit-tests
           echo "Unit tests are success..."

      - name: Upload Test Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-tests-artifacts
          path: unit-tests/artifacts
  
  deploy-app:
    name: 🚀 Deploy-app
    runs-on: ubuntu-latest
    needs: [lint, unit-test]
    steps:
      - name: Deploy the app
        run: echo "App deploy is success..."
    

  e2e-tests:
    name: 🧪 E2E tests
    needs: [deploy-app]
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.34.3-noble 

    env:
       TESTMO_TOKEN: ${{ secrets.TESTMO_TOKEN }}
       CI: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
           cd e2e-tests
           npm install -g @testmo/testmo-cli
           npm ci
          

      - name: check working directory
        run : |
           pwd
           ls
           cd e2e-tests
           

      - name: Run e2e tests
        run: |
           cd e2e-tests
           npm test
      
      - name: Upload Test Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-tests-artifacts
          path: e2e-tests/artifacts

      - name: Publish Test Results
        shell: bash
        env: 
           RUN_NAME: "Frontend Run - $(date +'%Y-%m-%d_%H-%M-%S')"
        run: |
           cd e2e-tests
           npx testmo automation:resources:add-link \
                      --name "GitHub repository" \
                      --url https://github.com/instadeepai/anakin/actions/runs/${{ github.run_id }} \
                      --resources resources.json

           npx testmo automation:resources:add-artifact \
                      --name "Artifacts" \
                      --url "https://github.com/instadeepai/anakin/actions/runs/${{ github.run_id }}/artifacts" \
                      --note "Test result reports"
           
           npx testmo automation:run:submit \
                      --instance "https://instadeepltd.testmo.net/" \
                      --project-id 6 \
                      --name $RUN_NAME \
                      --source "frontend" \
                      --resources resources.json \
                      --results artifacts/test-results/cucumber-report.xml
        

      
  
  tear-down:
    name: 🧪 Clean-up
    needs: [e2e-tests]
    runs-on: ubuntu-latest
    steps:
      - name: Free up resources
        run: echo "teardown is success..."

